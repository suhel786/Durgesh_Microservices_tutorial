API Gateway (Spring Cloud Gateway)
======================================

Project Name: ApiGateway
-------------------------
Description: Acts as the API Gateway for routing requests to various microservices.

Dependencies to include:
1. Spring Cloud Gateway
2. Eureka Discovery Client

Create 'application.yml' under /ApiGateway/src/main/resources:

server:
  port: 9084

spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      routes:
        - id: USER-SERVICE
          uri: lb://USER-SERVICE
          predicates:
            - Path=/users/**
        - id: HOTEL-SERVICE
          uri: lb://HOTEL-SERVICE
          predicates:
            - Path=/hotels/**,/staffs/**
        - id: RATING-SERVICE
          uri: lb://RATING-SERVICE
          predicates:
            - Path=/ratings/**

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

Note:
- This gateway routes requests to appropriate services based on the path.
- 'lb://' denotes load-balanced service calls using Eureka.
- API Gateway itself registers with Eureka and will appear on the Eureka Dashboard.

================================================================================
RestTemplate Configuration for Inter-Service Communication in UserService
================================================================================

In UserService, we need to call other microservices (like HOTEL-SERVICE or RATING-SERVICE)
by their service names registered with Eureka. To do this, we use RestTemplate annotated 
with @LoadBalanced.

This allows the service to resolve names via Eureka instead of hardcoded URLs.

Place the following code in the main application class or a configuration class in UserService:

--------------------------------------------------------------------------------

@Bean
// @LoadBalanced Allows RestTemplate to call services by name from Eureka
@LoadBalanced // RestTemplate, when annotated with @LoadBalanced, uses service names
              // registered in Eureka instead of hardcoded hostnames and ports.
public RestTemplate restTemplate() {
    return new RestTemplate();
}

--------------------------------------------------------------------------------

This enables UserService to communicate with HotelService and RatingService through
service discovery.

